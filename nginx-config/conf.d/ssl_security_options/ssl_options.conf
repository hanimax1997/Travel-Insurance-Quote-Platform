# This file contains important security parameters.
# this file. Contents are based on https://ssl-config.mozilla.org

    
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # The ssl_dhparam directive specifically points to a file containing pre-generated DH parameters, 
    # which are used during the key exchange process to establish a shared secret key between the client and the server.
    ssl_dhparam /etc/ssl/saga/dhparam.pem;


    # protocols configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    # Ensures that a web browser only connects to a website over HTTPS (secure connection). 
    # The max-age directive sets the time, in seconds, that the browser should remember to always use HTTPS for the site.
    add_header Strict-Transport-Security "max-age=63072000" always;

    #Prevents your web pages from being embedded within an iframe from other domains. 
    #Setting it to SAMEORIGIN allows the page to be framed only by pages from the same origin.
    add_header X-Frame-Options "SAMEORIGIN" always;

    #X-XSS-Protection: Activates the Cross-Site Scripting (XSS) filter built into most modern web browsers.
    # mode=block instructs the browser to prevent rendering of the page if an XSS attack is detected.
    add_header X-XSS-Protection "1; mode=block" always;

    #Prevents browsers from MIME-sniffing a response away from the declared content type. 
    #Setting it to nosniff prevents browsers from guessing the content type.
    add_header X-Content-Type-Options "nosniff" always;

    #Specifies how much referrer information (the URL of the previous web page) should be included when navigating from one page to another.
    #no-referrer-when-downgrade sends the referrer to the same origin, but not to less secure destinations (HTTP to HTTPS).
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    #Defines the content sources that the browser should consider acceptable for loading on a web page. 
    #In your provided CSP, you have allowed resources from any origin (default-src *) and specified 'unsafe-eval' 
    #and 'unsafe-inline' to permit inline JavaScript and CSS with unsafe practices.
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
    
    
    # OCSP stapling instead of CRL
    #ssl_stapling on;
    #ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    #ssl_trusted_certificate /etc/ssl/saga/ca_chain.crt;

    # replace with the IP address of your resolver
    resolver 10.132.30.1 10.132.30.2;